name: Pull-Request CI

on:
  pull_request:
    branches: [release, develop]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js and cache
        uses: actions/setup-node@v1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: ${{ runner.os }}-pr-angular-test-${{ hashFiles('**/package-lock.json') }}
      - run: npm install --legacy-peer-deps
      - run: npm run build:prepare
      - run: npm run test:ci
      - name: Run Cypress tests ðŸ§ª
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:cypress

  build_executables:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js and cache
        uses: actions/setup-node@v1
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: ${{ runner.os }}-pr-angular-exe-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Rust
        run: rustup install stable
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v1
      - run: npm install
      - run: npm run tauri:build:linux
        if: ${{ runner.os == 'Linux' }}
      - run: npm run tauri:build:macos
        if: ${{ runner.os == 'macOS' }}
      - run: npm run tauri:build:windows
        if: ${{ runner.os == 'Windows' }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_output
          path: src-tauri/target/release/bundle/**/*
