name: Pull-Request CI

on:
  pull_request:
    branches: [release, develop]

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js and cache
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: pr-angular-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install --legacy-peer-deps
      - run: npm run build:prepare
      - run: npm run test:ci
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:cypress

  headless:
    name: Build Headless
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.2
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: pr-angular-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build:prepare
      - run: npm run build:nexe -- -o release/out/memebox
      - run: release/out/memebox --cli-test-mode=true --config=./release/config
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: headless-${{ matrix.os }}
          path: release/out
  electron:
    name: Build Electron
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.2
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: pr-angular-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build:prepare
      - run: npm run electron:build:only
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: electron-${{ matrix.os }}
          path: release-electron/memebox*
  tauri:
    name: Build Tauri
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 12.16.2
          cache: npm
      - name: Setup Angular cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache
          key: pr-angular-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Setup Rust
        run: rustup install stable
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v1
      - name: Install WebKit dependencies
        run: sudo apt-get install -y --no-install-recommends libwebkit2gtk-4.0-dev
        if: ${{ runner.os == 'Linux' }}
      - run: npm install
      - run: npm run build:prepare
      - run: npm run build:linux
        if: ${{ runner.os == 'Linux' }}
      - run: npm run build:macos
        if: ${{ runner.os == 'macOS' }}
      - run: npm run build:windows
        if: ${{ runner.os == 'Windows' }}
      - run: npm run tauri:build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tauri-${{ matrix.os }}
          path: src-tauri/target/release/bundle/**/*
